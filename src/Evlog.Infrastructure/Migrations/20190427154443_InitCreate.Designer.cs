// <auto-generated />
using System;
using Evlog.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Evlog.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190427154443_InitCreate")]
    partial class InitCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Evlog.Infrastructure.DataModels.AnnouncementDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("EventPostId");

                    b.Property<DateTime>("LastEditedOn");

                    b.Property<string>("LongText");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("EventPostId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Evlog.Infrastructure.DataModels.EventPostDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("EndDate");

                    b.Property<DateTime?>("EndTime");

                    b.Property<string>("Slug");

                    b.Property<DateTime>("StartDateTime");

                    b.Property<string>("Title");

                    b.Property<int?>("UserDMId");

                    b.HasKey("Id");

                    b.HasIndex("UserDMId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Evlog.Infrastructure.DataModels.RegistrationDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<int>("EventPostId");

                    b.HasKey("Id");

                    b.HasIndex("EventPostId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Evlog.Infrastructure.DataModels.UserDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("IsVerified");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Evlog.Infrastructure.DataModels.AnnouncementDM", b =>
                {
                    b.HasOne("Evlog.Infrastructure.DataModels.EventPostDM", "EventPost")
                        .WithMany("Announcements")
                        .HasForeignKey("EventPostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Evlog.Infrastructure.DataModels.EventPostDM", b =>
                {
                    b.HasOne("Evlog.Infrastructure.DataModels.UserDM")
                        .WithMany("PendingRegistrations")
                        .HasForeignKey("UserDMId");
                });

            modelBuilder.Entity("Evlog.Infrastructure.DataModels.RegistrationDM", b =>
                {
                    b.HasOne("Evlog.Infrastructure.DataModels.EventPostDM", "EventPost")
                        .WithMany("Registrations")
                        .HasForeignKey("EventPostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
